"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[8337],{7058:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"email-basics/email-structure","title":"Email Structure","description":"Email is a familiar tool in our daily lives, but have you ever wondered how it\u2019s put together? Think of an email as a carefully packaged letter\u2014it consists of several key components that work together to ensure it\u2019s sent, received, and displayed correctly. This section provides a simple overview of an email\u2019s basic structure.","source":"@site/docs/email-basics/email-structure.md","sourceDirName":"email-basics","slug":"/email-basics/email-structure","permalink":"/rustmail-docs/docs/email-basics/email-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/email-basics/email-structure.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Email Flags","permalink":"/rustmail-docs/docs/email-basics/flags"},"next":{"title":"IMAP and SMTP","permalink":"/rustmail-docs/docs/email-basics/imap"}}');var n=t(4848),a=t(8453);const r={sidebar_position:7},l="Email Structure",o={},c=[{value:"The Envelope",id:"the-envelope",level:2},{value:"The Header",id:"the-header",level:2},{value:"The Body",id:"the-body",level:2},{value:"Attachments (Optional)",id:"attachments-optional",level:2},{value:"How Does It All Come Together?",id:"how-does-it-all-come-together",level:2},{value:"Why Does This Matter?",id:"why-does-this-matter",level:2}];function d(e){const i={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"email-structure",children:"Email Structure"})}),"\n",(0,n.jsx)(i.p,{children:"Email is a familiar tool in our daily lives, but have you ever wondered how it\u2019s put together? Think of an email as a carefully packaged letter\u2014it consists of several key components that work together to ensure it\u2019s sent, received, and displayed correctly. This section provides a simple overview of an email\u2019s basic structure."}),"\n",(0,n.jsx)(i.h2,{id:"the-envelope",children:"The Envelope"}),"\n",(0,n.jsx)(i.p,{children:"The \u201cenvelope\u201d is the behind-the-scenes part of an email used for routing. It includes:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Sender Address (From)"}),": Indicates where the email originates."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Recipient Address (To)"}),": Specifies who the email is intended for."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"This information is handled by mail protocols (like SMTP) and isn\u2019t typically visible to users, but it\u2019s essential for delivery."}),"\n",(0,n.jsx)(i.h2,{id:"the-header",children:"The Header"}),"\n",(0,n.jsx)(i.p,{children:"The \u201cheader\u201d is the metadata of the email, similar to the heading on a letter. It contains details such as:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"From"}),": Shows who sent the email."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"To"}),": Lists the primary recipient(s)."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Subject"}),": A brief title summarizing the email."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Date"}),": The timestamp of when the email was sent."]}),"\n",(0,n.jsx)(i.li,{children:"Optional fields: Like \u201cCc\u201d (carbon copy), \u201cBcc\u201d (blind carbon copy), or a unique identifier (Message-ID)."}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"Headers are usually visible in your email client and give a quick snapshot of the message."}),"\n",(0,n.jsx)(i.h2,{id:"the-body",children:"The Body"}),"\n",(0,n.jsx)(i.p,{children:"The \u201cbody\u201d is the actual content\u2014the message you want to convey. It can be:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Plain Text"}),": Simple text, compatible with all devices."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"HTML"}),": Richly formatted content with styling, links, or images, common in modern emails."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"This is the core of your communication with the recipient."}),"\n",(0,n.jsx)(i.h2,{id:"attachments-optional",children:"Attachments (Optional)"}),"\n",(0,n.jsx)(i.p,{children:"If you need to send files (like images or documents), they\u2019re included as attachments. These are typically encoded (e.g., in Base64) and bundled with the email for secure transmission."}),"\n",(0,n.jsx)(i.h2,{id:"how-does-it-all-come-together",children:"How Does It All Come Together?"}),"\n",(0,n.jsx)(i.p,{children:"A complete email combines these elements into a single package, following standards like RFC 5322. Email clients (e.g., Gmail) or server programs use protocols like SMTP to send this package to its destination, where it\u2019s unpacked and displayed for the recipient."}),"\n",(0,n.jsx)(i.h2,{id:"why-does-this-matter",children:"Why Does This Matter?"}),"\n",(0,n.jsx)(i.p,{children:"If you\u2019re building an email-related application\u2014like our standalone RustMail engine\u2014understanding this structure is the first step. Whether you\u2019re sending emails via a RESTful API or handling advanced tasks with gRPC, knowing these basics will help you create more effective features."}),"\n",(0,n.jsx)(i.p,{children:"In the next section, we\u2019ll explore how to interact with these email components using our product\u2014stay tuned!"})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>l});var s=t(6540);const n={},a=s.createContext(n);function r(e){const i=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(a.Provider,{value:i},e.children)}}}]);